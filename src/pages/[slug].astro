---
import Layout from "@layouts/Layout.astro"
import { posts as postsPromise } from "@lib/api.ts"

export async function getStaticPaths() {
	const allPosts = await postsPromise // Await the single, cached promise

	return allPosts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}))
}

const { post } = Astro.props

// case-insensitive regex because wordpress likes it <A HREF>
const linkRegex = /href="(https?:\/\/slatestarcodex\.com[^"]*)"/gi

function replacer(_match: string, url: string) {
	const path = new URL(url).pathname

	// Check for blog post pattern: /YYYY/MM/DD/
	const isPost = /\/\d{4}\/\d{2}\/\d{2}\//.test(path)

	if (isPost) {
		// It's a blog post, so extract the slug
		const slug = path.split("/").filter(Boolean).pop()
		return `href="${slug}/"`
	}
	// It's any other page, so prefix with /pages/
	const pageSlug = path.replace(/^\/|\/$/g, "")
	if (pageSlug) {
		return `href="pages/${pageSlug}/"`
	}
	return 'href=""'
}

const processedContent = post.content.rendered.replaceAll(linkRegex, replacer)

const words = post.content.rendered.replace(/<[^>]*>/g, "").split(/\s+/).length
const readingTime = Math.ceil(words / 225)
---

<Layout title={post.title.rendered}>
	<article>
		<h1 set:html={post.title.rendered} />
		<div class="post-meta">
			Published on {
				new Date(post.date).toLocaleDateString("en-US", {
					year: "numeric",
					month: "long",
					day: "numeric",
				})
			}
			&bull; {readingTime} min read
		</div>
		<Fragment set:html={processedContent} />
	</article>
</Layout>

<style lang="scss">
	.post-meta {
		color: #6c757d;
		font-size: 0.9rem;
		margin-bottom: 2rem;
	}
</style>
